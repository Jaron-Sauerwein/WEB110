/*Jaron Sauerwein Final Project 7/22/2025*/
*{ 
    margin:0;
    padding:0;
    box-sizing: border-box;
    font-family: Arial, sans-serif;
}
/*here we set the header up to have the correct color, size, and alignment*/
header h1{
    grid-column: 1 / 3;
    grid-row: 1 / 2;
    grid-area:header;
    display:grid;
    justify-content: center;
    align-items: center;
    font-size: 6rem;
    color:#f5c342;
}

/*Here is the wrapper, where I set the grid template so as to create a two-column page layout on the three pages linked to this CSS sheet.*/
#wrapper{
    display:grid;
    grid-template-columns: 50% 50%;
    grid-template-rows: 6% auto auto auto auto auto auto auto auto 30%;
    grid-template: 
                       "header header"
                       "aside main" 
                       "aside2 main2" 
                       "aside3 main3" 
                       "aside4 main4" 
                       "aside5 main5" 
                       "aside6 main6" 
                       "aside7 main7"
                       "aside8 main8" 
                       "footer footer" 
                        
}
   
@media only screen and (max-width:600px){
    body{background-color:black;}
}

.nav{
    display:inline;
}

/*Here we set the font size and gap between the nav elements. I also set the list-style-type to none so as to remove any shapes between the nav elements.*/
nav ul{
    font-size:1.5em;
    list-style-type: none;
}

/*Here we set the inline display of the nav elements, so that they can both exist on the same line. I decided to keep the nav elements in the top left corner, as I felt that was a unique arrangement compared to the examples we've worked with so far.*/
nav li{
    display: inline;
}

/*Here we set the initial traits of the nav. I decided to go with white text to match the p text below, and we removed text decoration so as to not have the nav arranged as hyperlinks.*/
nav a{
    color: white;
    text-decoration: none;
    padding-right:1em;
    padding-left:1em;
}

/*Now when hovering over the text, it will turn to a golden yellow color that matches the theme.*/
nav a:hover{
    color: #f5c342;
    text-decoration: none;
    max-width: 90%;
}

/*Here I added the asphalt texture background, with fits the highway theme of the page. I allowed the image to tile as default because highways are often made of large square patches, thus matching the theme.*/
body{
     background-image:url(asphalt-road-texture-dark-gray-color.jpg);
     background-size: contain;    
}

/*Added a small margin and inserted a theme-matching border with an inlet edge and thick width to images.*/
img{
    width:65%;
    height:auto;
    display:block;
    margin:auto;
    border-style:inset;
    border-color:#f5c342;
    border-width:thick;
    align-content: center;
}

/*Aligned figcaptions and gave them the same color as the p, ul, and ol text.*/
figcaption{
    display:block;
    padding-left: 2%;
    padding-right: 2%;
    margin:auto;
    text-align:center;
    color: white;
}

/*Here we center aligned our text, set an automatic margin and some resonable padding and bottom margins.*/
main{
    grid-area: main;
    text-align:center;
    margin: 0 auto;
    padding: 2rem;
    margin-bottom: 3rem;
}

/*This is where we set the color for the headings and aligned them to the center. I chose a font size that was only slightly larger than the p text as I wanted the headings to be only subtly larger.*/
h2{
    grid-area: aside;
    color:#f5c342;
    text-align:center;
    font-size:2.5em;
    padding: 1em;
}

/*Here's where I made the decision to go with white text to match the highway theme of the page. I also set the font size as .5em smaller than the headings and decided on margins and padding.*/
p{
    color:white;
    font-size: 2em;
    padding:1em;
    margin-top:.75em;
    margin-bottom:.75em;
    margin-left:8%;
    margin-right:8%;
}

/*Changed the attributes of the link so that they matched the rest of the paragraph. I found that the link needed some trait that made it more obvious to the user, so I decided to go with Italics. */
a:link{
    color:white;
    text-decoration:none;
    font-style: italic;
}

/*Affirmed that I want the text to remain white even after it has been visited.*/
a:visited{
    color:white;
}

/*When focused on I set the text to be the matching golden yellow, sticking with the theme but adding visual interest.*/
a:focus{
    color:#f5c342;
}

/*Ditto for hover.*/
a:hover{
    color:#f5c342;
}

/*Also the same when the text is active.*/
a:active{
    color:#f5c342;
}

/*Here is where I set up the standards for our unorganized lists. I set the position to inside to keep the graphic additions near to the text. Inline-block and text centered give the elements a cohesive look. Also set the text and its font color to match p.*/
ul{
    list-style-position: inside;
    margin-top:.5em;
    margin-bottom:.5em;
    margin-right:2em;
    margin-left:0;
    display:inline-block;
    color:white;
    font-size:2em;
}

/*Commands for the organized list are identical to the unorganized list.*/
ol{
    list-style-position:inside;
    margin-top:.5em;
    margin-bottom:.5em;
    margin-right:2em;
    margin-left:0;
    display:inline-block;
    text-align:center;
    color:white;
    font-size:2em;
}

/*I also set margins for the individual list items, and also give them an indent that I felt made the lists look much more professional.*/
li{ 
    margin-top:.5em;
    margin-bottom:.5em;
    margin-right:2em;
    margin-left:3em;
    text-indent:1em;
}

/*Each paragraph with its heading and any images or lists were organized into sections for easy access. I grouped these sections in with borders for each one, as this makes the two-cloumn layout more user-friendly and easier to read.*/
section{
    margin-left:1%;
    margin-right:1%;
    margin-bottom:1%;
    margin-top:3%;
    border-style:inset;
    border-color:#f5c342;
    border-width:thick;
}

/*Finally, I created a footer with centered text and the matching yellow pulled from an actual photo of a rural highway.*/
footer{
    grid-area: footer;
    color:#f5c342;
    text-align:center;
}
/*Here I set the series of classes that will allow me to move elements into the two column layout on my three pages.*/
.whoisjaron{
    grid-area:aside;
}

.earlyyears{
    grid-area:main;
}

.earlycareer{
    grid-area:aside2;
}

.trevipayyears{
    grid-area:main2;
}

.brighterfuture{
    grid-area:aside3;
}

.role{
    margin-bottom:2px;
    flex-wrap: wrap;
    grid-area: aside;
}

.projects{
    margin-top:2px;
    flex-wrap: wrap;
    grid-area:aside2;
}

.conclusion{
    margin-top:2px;
    flex-wrap: wrap;
    grid-area: main;
}

.requirements{
    margin-top:2px;
    flex-wrap: wrap;
    grid-area: aside2;
}






/*I hope you enjoyed my CSS! Thanks for teaching me so much! I learned oodles and I hope I can apply it professionally one day. This course definetly reaffirmed that I enjoy HTML/CSS.*/
